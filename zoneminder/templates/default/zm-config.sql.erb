-- sql file will be executed by chef to initially configure ZM
--

<% @zm_config.each_pair do |k, v|
     name  = k.to_s.upcase
     value = case v
             when true then 1
             when false then 0
             else v
	     end
%>
update Config set value = '<%= value %>' where name = '<%= name %>' ;
<% end %>

update Users set Password = 
  <%= @adminpw =~ /\*/ ? 
      "'%s'" % @adminpw : 
      "password('%s')" % @adminpw 
   %>
  where Username = 'admin';
   
-- alexg: TODO refactor
<% @zm_admins.each do |u|
     user_id = u[:id]
     next unless u[:zm_passwd]
     passwd_sql  = u[:zm_passwd] =~ /\*/ ? 
       "'%s'" % u[:zm_passwd] : 
       "password('%s')" % u[:zm_passwd]
%>
insert into Users
  (Username, Password, Language,
   Stream, Events, Control, Monitors, Devices, System,
   MaxBandwidth, MonitorIds )
  values
  ('<%= user_id %>', <%= passwd_sql %>, 'en_us',
   'View', 'Edit', 'Edit', 'Edit', 'None', 'Edit',
   'high', ''
   )
  on duplicate key update
   Password=<%= passwd_sql %>, Language='en_us',
   Stream='View', Events='Edit', Control='Edit', Monitors='Edit', 
   Devices='None', System='Edit', MaxBandwidth='high' ;
<% end %>

<% @zm_users.each do |u|
     user_id = u[:id]
     next unless u[:zm_passwd]
     passwd_sql  = u[:zm_passwd] =~ /\*/ ? 
       "'%s'" % u[:zm_passwd] : 
       "password('%s')" % u[:zm_passwd]
%>
insert into Users
  (Username, Password, Language,
   Stream, Events, Control, Monitors, Devices, System,
   MaxBandwidth, MonitorIds )
  values
  ('<%= user_id %>', <%= passwd_sql %>, 'en_us',
   'View', 'View', 'View', 'View', 'None', 'View',
   'high', ''
   )
  on duplicate key update
   Password=<%= passwd_sql %>, Language='en_us',
   Stream='View', Events='View', Control='View', Monitors='View', 
   Devices='None', System='View', MaxBandwidth='high' ;
<% end %>
